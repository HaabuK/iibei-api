{
  "openapi": "3.0.2",
  "info": {
      "title": "Iibei API",
      "version": "1.0.0",
      "description": "### This is a Swagger UI for our IIbei API  \n\n### Error handling\nErrors are presented using the HTTP status codes 400-599. The response include a more detailed explanation about the error in the body.\n\n```\n{\n  \"error\": \"Cleartext explanation of the error that occurred\"\n}\n```\n\n### Generic API errors\nThese error responses can be returned by any of the described endpoints.\n\n| HTTP status  |  Description |\n|---|---|\n| 400| Bad input parameters or invalid request. More information can be found in the response body.\n| 401| The consumer does not have access to the requested resource or the provided token is not valid.\n| 404| The requested resource can not be found or the user does not have access to the resource.\n| 5XX| A server error has occurred while processing the request. "
  },
  "paths": {
    "/jobs": {
        "get": {
            "tags": ["jobs"],
            "summary": "Get all jobs",
            "responses": {
            "200": {
                "description": "Successful response",
                "content": {
                "application/json": {
                    "example": {
                    "jobs": [
                        { "id": 1, "name": "Koristaja", "quote": 6 },
                        { "id": 2, "name": "Kokk", "quote": 10.00 },
                        { "id": 3, "name": "Autojuht", "quote": 9.00 },
                        { "id": 4, "name": "Maaler", "quote": 13.50 },
                        { "id": 5, "name": "Torumees", "quote": 15.25 },
                        { "id": 6, "name": "Lapsehoidja", "quote": 8.99 },
                        { "id": 7, "name": "Ehitaja", "quote": 10.99 },
                        { "id": 8, "name": "Raamatupidaja", "quote": 18.00 },
                        { "id": 9, "name": "Treener", "quote": 10.50 }
                    ]
                    }
                }
                }
            },
            "404": {
                "description": "No jobs found"
            }
            }
        },
        "post": {
            "tags": ["jobs"],
            "summary": "Create a new job",
            "requestBody": {
            "content": {
                "application/json": {
                "example": {
                    "name": "New Job",
                    "quote": 20.00
                }
                }
            }
            },
            "responses": {
            "201": {
                "description": "Job created successfully",
                "content": {
                "application/json": {
                    "example": {
                    "id": 10,
                    "name": "New Job",
                    "quote": 20.00
                    }
                }
                }
            },
            "400": {
                "description": "Bad request"
            }
            }
        }
        },
        "/jobs/{id}": {
        "get": {
            "tags": ["jobs"],
            "summary": "Get a job by ID",
            "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                "type": "integer"
                }
            }
            ],
            "responses": {
            "200": {
                "description": "Successful response",
                "content": {
                "application/json": {
                    "example": {
                    "id": 1,
                    "name": "Koristaja",
                    "quote": 6
                    }
                }
                }
            },
            "404": {
                "description": "Job not found"
            }
            }
        },
        "put": {
            "tags": ["jobs"],
            "summary": "Update a job by ID",
            "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                "type": "integer"
                }
            }
            ],
            "requestBody": {
            "content": {
                "application/json": {
                "example": {
                    "name": "Updated Job",
                    "quote": 25.00
                }
                }
            }
            },
            "responses": {
            "200": {
                "description": "Job updated successfully",
                "content": {
                "application/json": {
                    "example": {
                    "id": 1,
                    "name": "Updated Job",
                    "quote": 25.00
                    }
                }
                }
            },
            "404": {
                "description": "Job not found"
            }
            }
        },
        "delete": {
            "tags": ["jobs"],
            "summary": "Delete a job by ID",
            "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                "type": "integer"
                }
            }
            ],
            "responses": {
            "204": {
                "description": "Job deleted successfully"
            },
            "404": {
                "description": "Job not found"
            }
            }
        }
        },
  "/professions": {
    "get": {
      "tags": ["professions"],
      "summary": "Get all professions",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "example": {
                "professions": [
                  { "id": 1, "name": "Maaler", "field": "Ehitus" },
                  { "id": 2, "name": "Lendur", "field": "Transport" }
                ]
              }
            }
          }
        },
        "404": {
          "description": "No professions found"
        }
      }
    },
    "post": {
      "tags": ["professions"],
      "summary": "Create a new profession",
      "requestBody": {
        "content": {
          "application/json": {
            "example": {
              "name": "Pilot",
              "field": "Transportation"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Profession created successfully",
          "content": {
            "application/json": {
              "example": {
                "id": 3,
                "name": "Pilot",
                "field": "Transportation"
              }
            }
          }
        },
        "400": {
          "description": "Bad request"
        }
      }
    }
  },
  "/professions/{id}": {
    "get": {
      "tags": ["professions"],
      "summary": "Get a profession by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "example": {
                "id": 1,
                "name": "Maaler",
                "field": "Ehitus"
              }
            }
          }
        },
        "404": {
          "description": "Profession not found"
        }
      }
    },
    "put": {
      "tags": ["professions"],
      "summary": "Update a profession by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "example": {
              "name": "Updated Maaler",
              "field": "Updated Ehitus"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Profession updated successfully",
          "content": {
            "application/json": {
              "example": {
                "id": 1,
                "name": "Updated Maaler",
                "field": "Updated Ehitus"
              }
            }
          }
        },
        "404": {
          "description": "Profession not found"
        }
      }
    },
    "delete": {
      "tags": ["professions"],
      "summary": "Delete a profession by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "Profession deleted successfully"
        },
        "404": {
          "description": "Profession not found"
        }
      }
    }
  },
  "/workers": {
    "get": {
      "tags": ["workers"],
      "summary": "Get all workers",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "example": {
                "workers": [
                  { "id": 1, "name": "John Doe", "salary": 50000, "email": "john@example.com", "phone": "123-456-7890", "company": "ABC Corp", "driverslicense": "A12345" },
                  { "id": 2, "name": "Jane Doe", "salary": 60000, "email": "jane@example.com", "phone": "987-654-3210", "company": "XYZ Inc", "driverslicense": "B67890" }
                ]
              }
            }
          }
        },
        "404": {
          "description": "No workers found"
        }
      }
    },
    "post": {
      "tags": ["workers"],
      "summary": "Create a new worker",
      "requestBody": {
        "content": {
          "application/json": {
            "example": {
              "name": "Bob Smith",
              "salary": 70000,
              "email": "bob@example.com",
              "phone": "456-789-0123",
              "company": "123 Co",
              "driverslicense": "C98765"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Worker created successfully",
          "content": {
            "application/json": {
              "example": {
                "id": 3,
                "name": "Bob Smith",
                "salary": 70000,
                "email": "bob@example.com",
                "phone": "456-789-0123",
                "company": "123 Co",
                "driverslicense": "C98765"
              }
            }
          }
        },
        "400": {
          "description": "Bad request"
        }
      }
    }
  },
  "/workers/{id}": {
    "get": {
      "tags": ["workers"],
      "summary": "Get a worker by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "example": {
                "id": 1,
                "name": "John Doe",
                "salary": 50000,
                "email": "john@example.com",
                "phone": "123-456-7890",
                "company": "ABC Corp",
                "driverslicense": "A12345"
              }
            }
          }
        },
        "404": {
          "description": "Worker not found"
        }
      }
    },
    "put": {
      "tags": ["workers"],
      "summary": "Update a worker by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "example": {
              "name": "Updated John Doe",
              "salary": 55000,
              "email": "john.updated@example.com",
              "phone": "123-456-7890",
              "company": "ABC Corp",
              "driverslicense": "A12345"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Worker updated successfully",
          "content": {
            "application/json": {
              "example": {
                "id": 1,
                "name": "Updated John Doe",
                "salary": 55000,
                "email": "john.updated@example.com",
                "phone": "123-456-7890",
                "company": "ABC Corp",
                "driverslicense": "A12345"
              }
            }
          }
        },
        "404": {
          "description": "Worker not found"
        }
      }
    },
    "delete": {
      "tags": ["workers"],
      "summary": "Delete a worker by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "Worker deleted successfully"
        },
        "404": {
          "description": "Worker not found"
        }
      }
    }
  },
  "/clients": {
    "get": {
      "tags": ["clients"],
      "summary": "Get all clients",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "example": {
                "clients": [
                  { "id": 1, "name": "Client A", "location": "City A", "email": "clientA@example.com", "phone": "111-111-1111", "company": "Company A" },
                  { "id": 2, "name": "Client B", "location": "City B", "email": "clientB@example.com", "phone": "222-222-2222", "company": "Company B" }
                ]
              }
            }
          }
        },
        "404": {
          "description": "No clients found"
        }
      }
    },
    "post": {
      "tags": ["clients"],
      "summary": "Create a new client",
      "requestBody": {
        "content": {
          "application/json": {
            "example": {
              "name": "New Client",
              "location": "New City",
              "email": "newclient@example.com",
              "phone": "333-333-3333",
              "company": "New Company"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Client created successfully",
          "content": {
            "application/json": {
              "example": {
                "id": 3,
                "name": "New Client",
                "location": "New City",
                "email": "newclient@example.com",
                "phone": "333-333-3333",
                "company": "New Company"
              }
            }
          }
        },
        "400": {
          "description": "Bad request"
        }
      }
    }
  },
  "/clients/{id}": {
    "get": {
      "tags": ["clients"],
      "summary": "Get a client by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "example": {
                "id": 1,
                "name": "Client A",
                "location": "City A",
                "email": "clientA@example.com",
                "phone": "111-111-1111",
                "company": "Company A"
              }
            }
          }
        },
        "404": {
          "description": "Client not found"
        }
      }
    },
    "put": {
      "tags": ["clients"],
      "summary": "Update a client by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "example": {
              "name": "Updated Client A",
              "location": "Updated City A",
              "email": "updatedclientA@example.com",
              "phone": "111-111-1111",
              "company": "Updated Company A"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Client updated successfully",
          "content": {
            "application/json": {
              "example": {
                "id": 1,
                "name": "Updated Client A",
                "location": "Updated City A",
                "email": "updatedclientA@example.com",
                "phone": "111-111-1111",
                "company": "Updated Company A"
              }
            }
          }
        },
        "404": {
          "description": "Client not found"
        }
      }
    },
    "delete": {
      "tags": ["clients"],
      "summary": "Delete a client by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "Client deleted successfully"
        },
        "404": {
          "description": "Client not found"
        }
      }
    }
  },

  "/workersInProfession": {
    "get": {
      "tags": ["workersInProfession"],
      "summary": "Get all workersInProfession",
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "example": {
                "workersInProfession": [
                  { "id": 1, "workerId": 1, "professionId": 1 }
                ]
              }
            }
          }
        },
        "404": {
          "description": "No workersInProfession found"
        }
      }
    },
    "post": {
      "tags": ["workersInProfession"],
      "summary": "Create a new workersInProfession",
      "requestBody": {
        "content": {
          "application/json": {
            "example": {
              "workerId": 1,
              "professionId": 1
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "WorkersInProfession created successfully",
          "content": {
            "application/json": {
              "example": {
                "id": 1,
                "workerId": 1,
                "professionId": 1
              }
            }
          }
        },
        "400": {
          "description": "Bad request"
        }
      }
    }
  },
  "/workersInProfession/{id}": {
    "get": {
      "tags": ["workersInProfession"],
      "summary": "Get a workersInProfession by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "content": {
            "application/json": {
              "example": {
                "id": 1,
                "workerId": 1,
                "professionId": 1
              }
            }
          }
        },
        "404": {
          "description": "WorkersInProfession not found"
        }
      }
    },
    "put": {
      "tags": ["workersInProfession"],
      "summary": "Update a workersInProfession by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "example": {
              "workerId": 2,
              "professionId": 1
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "WorkersInProfession updated successfully",
          "content": {
            "application/json": {
              "example": {
                "id": 1,
                "workerId": 2,
                "professionId": 1
              }
            }
          }
        },
        "404": {
          "description": "WorkersInProfession not found"
        }
      }
    },
    "delete": {
      "tags": ["workersInProfession"],
      "summary": "Delete a workersInProfession by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "204": {
          "description": "WorkersInProfession deleted successfully"
        },
        "404": {
          "description": "WorkersInProfession not found"
        }
      }
    }
  }
        
  }
}